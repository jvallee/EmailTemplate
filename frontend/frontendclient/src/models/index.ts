/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export interface Candidate {
  /**
   * Name
   */
  name: string;
  /**
   * Years experience
   */
  yearsExperience: string;
  /**
   * Custom
   */
  custom: string;
}

export interface Client {
  /**
   * ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: number;
  /**
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly jobs?: (Job | null)[] | null;
  /**
   * Name
   */
  name: string;
}

export interface Job {
  /**
   * ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: number;
  /**
   * Name
   */
  name: string;
  /**
   * Template
   */
  template: string;
  /**
   * HasDraft
   */
  hasDraft?: boolean;
  /**
   * TemplateDraft
   */
  templateDraft?: string;
  /**
   * Subject
   */
  subject?: string;
  /**
   * Poster
   */
  poster: number;
}

export interface Todo {
  /**
   * ID
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: number;
  /**
   * Title
   */
  title: string;
  /**
   * Description
   */
  description: string;
  /**
   * Completed
   */
  completed?: boolean;
}

/**
 * Contains response data for the list operation.
 */
export type CandidatesListResponse = Candidate[] & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Candidate[];
  };
};

/**
 * Contains response data for the create operation.
 */
export type CandidatesCreateResponse = Candidate & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Candidate;
  };
};

/**
 * Contains response data for the read operation.
 */
export type CandidatesReadResponse = Candidate & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Candidate;
  };
};

/**
 * Contains response data for the update operation.
 */
export type CandidatesUpdateResponse = Candidate & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Candidate;
  };
};

/**
 * Contains response data for the partialUpdate operation.
 */
export type CandidatesPartialUpdateResponse = Candidate & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Candidate;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ClientsListResponse = Client[] & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Client[];
  };
};

/**
 * Contains response data for the create operation.
 */
export type ClientsCreateResponse = Client & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Client;
  };
};

/**
 * Contains response data for the read operation.
 */
export type ClientsReadResponse = Client & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Client;
  };
};

/**
 * Contains response data for the update operation.
 */
export type ClientsUpdateResponse = Client & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Client;
  };
};

/**
 * Contains response data for the partialUpdate operation.
 */
export type ClientsPartialUpdateResponse = Client & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Client;
  };
};

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = (Job | null)[] & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: (Job | null)[];
  };
};

/**
 * Contains response data for the create operation.
 */
export type JobsCreateResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Job;
  };
};

/**
 * Contains response data for the read operation.
 */
export type JobsReadResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Job;
  };
};

/**
 * Contains response data for the update operation.
 */
export type JobsUpdateResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Job;
  };
};

/**
 * Contains response data for the partialUpdate operation.
 */
export type JobsPartialUpdateResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Job;
  };
};

/**
 * Contains response data for the list operation.
 */
export type TodosListResponse = Todo[] & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Todo[];
  };
};

/**
 * Contains response data for the create operation.
 */
export type TodosCreateResponse = Todo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Todo;
  };
};

/**
 * Contains response data for the read operation.
 */
export type TodosReadResponse = Todo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Todo;
  };
};

/**
 * Contains response data for the update operation.
 */
export type TodosUpdateResponse = Todo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Todo;
  };
};

/**
 * Contains response data for the partialUpdate operation.
 */
export type TodosPartialUpdateResponse = Todo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Todo;
  };
};

/**
 * Optional parameters.
 */
export interface BackEndAPIOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
