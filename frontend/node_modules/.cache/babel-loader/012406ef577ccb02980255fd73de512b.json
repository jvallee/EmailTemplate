{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\n// import { Editor, EditorState } from \"draft-js\";\nimport { convertToRaw, EditorState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport { useParams } from \"react-router\";\nimport reducer from \"./OutReachEditorReducer\";\n\nconst OutReachEditorPage = props => {\n  _s();\n\n  const {\n    apiService\n  } = props;\n  const [editorState, setEditorState] = React.useState(() => EditorState.createEmpty());\n  const [job, setJob] = useState();\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  const onChange = draftContent => {\n    dispatch({\n      type: \"EDITOR_ON_CHANGE\",\n      payload: draftContent\n    });\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    job: job,\n    editorState: editorState,\n    isDirty: false\n  });\n  const id = useParams().id;\n  useEffect(() => {\n    debugger;\n    apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsRetrieve(parseInt(id)).then(value => {\n      debugger;\n      setJob(value.data);\n    });\n  }, []);\n  useEffect(() => {\n    debugger;\n    apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsRetrieve(parseInt(id)).then(value => {\n      debugger;\n      convertToRaw(editorState.getCurrentContent());\n      setJob(value.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Draft for\" + (job === null || job === void 0 ? void 0 : job.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onEditorStateChange: onEditorStateChange,\n      spellCheck: true,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OutReachEditorPage, \"NtwAkYWpZ9C9hxZ1s52ek/YhNWQ=\", false, function () {\n  return [useParams];\n});\n\n_c = OutReachEditorPage;\nexport default OutReachEditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutReachEditorPage\");","map":{"version":3,"sources":["/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx"],"names":["React","useEffect","useReducer","useState","convertToRaw","EditorState","Editor","useParams","reducer","OutReachEditorPage","props","apiService","editorState","setEditorState","createEmpty","job","setJob","onEditorStateChange","onChange","draftContent","dispatch","type","payload","state","isDirty","id","apiJobsRetrieve","parseInt","then","value","data","getCurrentContent","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,UAA1C;AACA,SAASC,MAAT,QAA6C,qBAA7C;AACA,OAAO,kDAAP;AAEA,OAAO,yBAAP;AACA,OAAO,sBAAP;AAEA,SAA8BC,SAA9B,QAA+C,cAA/C;AACA,OAAOC,OAAP,MAAoD,yBAApD;;AAWA,MAAMC,kBAAiD,GAAIC,KAAD,IAAW;AAAA;;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACG,QAAN,CAAe,MACnDE,WAAW,CAACS,WAAZ,EADoC,CAAtC;AAIA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,EAA9B;;AACA,QAAMc,mBAAmB,GAAIL,WAAD,IAA8B;AACxDC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAFD;;AAGA,QAAMM,QAAQ,GAAIC,YAAD,IAAwC;AACvDC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEH;AAArC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAM,CAACI,KAAD,EAAQH,QAAR,IAAoBlB,UAAU,CAACM,OAAD,EAAU;AAC5CO,IAAAA,GAAG,EAAEA,GADuC;AAE5CH,IAAAA,WAAW,EAAEA,WAF+B;AAG5CY,IAAAA,OAAO,EAAE;AAHmC,GAAV,CAApC;AAMA,QAAMC,EAAE,GAAGlB,SAAS,GAAkCkB,EAAtD;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEe,eAAZ,CAA4BC,QAAQ,CAACF,EAAD,CAApC,EAA0CG,IAA1C,CAAgDC,KAAD,IAAW;AACxD;AACAb,MAAAA,MAAM,CAACa,KAAK,CAACC,IAAP,CAAN;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;AAQA7B,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEe,eAAZ,CAA4BC,QAAQ,CAACF,EAAD,CAApC,EAA0CG,IAA1C,CAAgDC,KAAD,IAAW;AACxD;AACAzB,MAAAA,YAAY,CAACQ,WAAW,CAACmB,iBAAZ,EAAD,CAAZ;AACAf,MAAAA,MAAM,CAACa,KAAK,CAACC,IAAP,CAAN;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAK,eAAcf,GAAd,aAAcA,GAAd,uBAAcA,GAAG,CAAEiB,IAAnB;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEpB,WADf;AAEE,MAAA,mBAAmB,EAAEK,mBAFvB;AAGE,MAAA,UAAU,EAAE,IAHd;AAIE,MAAA,gBAAgB,EAAC,cAJnB;AAKE,MAAA,eAAe,EAAC,aALlB;AAME,MAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvDD;;GAAMT,kB;UAoBOF,S;;;KApBPE,kB;AAyDN,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { ApiApi, Job } from \"../../../util/gen/api/dist\";\n// import { Editor, EditorState } from \"draft-js\";\nimport { convertToRaw, EditorState } from \"draft-js\";\nimport { Editor, RawDraftContentState } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport JobCell from \"../../common/JobCell/JobCell\";\nimport { RouteComponentProps, useParams } from \"react-router\";\nimport reducer, { OutReachEditorReducerState } from \"./OutReachEditorReducer\";\n\ntype OutReachEditorProps = {\n  setQueryInfo?: Function;\n  apiService?: ApiApi;\n};\n\ninterface IUserPublicProfileRouteParams {\n  id: string;\n}\n\nconst OutReachEditorPage: React.FC<OutReachEditorProps> = (props) => {\n  const { apiService } = props;\n  const [editorState, setEditorState] = React.useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const [job, setJob] = useState<Job>();\n  const onEditorStateChange = (editorState: EditorState) => {\n    setEditorState(editorState);\n  };\n  const onChange = (draftContent: RawDraftContentState) => {\n    dispatch({ type: \"EDITOR_ON_CHANGE\", payload: draftContent });\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    job: job,\n    editorState: editorState,\n    isDirty: false,\n  } as OutReachEditorReducerState);\n\n  const id = useParams<IUserPublicProfileRouteParams>().id;\n\n  useEffect(() => {\n    debugger;\n    apiService?.apiJobsRetrieve(parseInt(id)).then((value) => {\n      debugger;\n      setJob(value.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    debugger;\n    apiService?.apiJobsRetrieve(parseInt(id)).then((value) => {\n      debugger;\n      convertToRaw(editorState.getCurrentContent());\n      setJob(value.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h2>{\"Draft for\" + job?.name}</h2>\n        <button>Save Template</button>\n      </div>\n      <Editor\n        editorState={editorState}\n        onEditorStateChange={onEditorStateChange}\n        spellCheck={true}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default OutReachEditorPage;\n"]},"metadata":{},"sourceType":"module"}