{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\n// import { Editor, EditorState } from \"draft-js\";\nimport { EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport { useParams } from \"react-router\";\nimport reducer from \"./OutReachEditorReducer\";\n\nconst OutReachEditorPage = props => {\n  _s();\n\n  const {\n    apiService\n  } = props;\n  const [job, setJob] = useState();\n  const id = useParams().id;\n  useEffect(() => {\n    apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsRetrieve(parseInt(id)).then(value => {\n      var _job$template;\n\n      debugger;\n      setJob(value.data);\n      var initialContentState = ContentState.createFromText((_job$template = job === null || job === void 0 ? void 0 : job.template) !== null && _job$template !== void 0 ? _job$template : \"\");\n      var initialEditorState = EditorState.createWithContent(initialContentState);\n      debugger; // setEditorState(initialEditorState);\n\n      dispatch({\n        type: \"EDITOR_LOADED_200\",\n        payload: initialEditorState\n      });\n    });\n  }, []); // const initialContentState = ContentState.createFromText(job?.name ?? \"\");\n  // const initialEditorState = EditorState.createWithContent(initialContentState);\n\n  const [editorState, setEditorState] = React.useState(EditorState.createEmpty()); // const temp = new EditorState(\"hello there\");\n\n  const onEditorStateChange = editorState => {\n    // setEditorState(editorState);\n    dispatch({\n      type: \"EDITOR_EDITED_200\",\n      payload: editorState\n    });\n  };\n\n  const onChange = draftContent => {\n    debugger;\n    dispatch({\n      type: \"EDITOR_ON_CHANGE\",\n      payload: draftContent\n    });\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    job: job,\n    editorState: editorState,\n    isDirty: false\n  }); // useEffect(() => {\n  //   apiService?.apiJobsRetrieve(parseInt(id)).then((value) => {\n  //     debugger;\n  //     convertToRaw(editorState.getCurrentContent());\n  //     setJob(value.data);\n  //   });\n  // }, []);\n\n  /* init in useState boo!*/\n\n  const init = ContentState.createFromText(\"plain text\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Draft for \" + (job === null || job === void 0 ? void 0 : job.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor // initialContentState={initialContentState}\n    , {\n      editorState: state.editorState,\n      onEditorStateChange: onEditorStateChange,\n      spellCheck: true,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OutReachEditorPage, \"9yaJCYIQ41MUTtawUSQLLg4khRg=\", false, function () {\n  return [useParams];\n});\n\n_c = OutReachEditorPage;\nexport default OutReachEditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutReachEditorPage\");","map":{"version":3,"sources":["/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx"],"names":["React","useEffect","useReducer","useState","EditorState","ContentState","Editor","useParams","reducer","OutReachEditorPage","props","apiService","job","setJob","id","apiJobsRetrieve","parseInt","then","value","data","initialContentState","createFromText","template","initialEditorState","createWithContent","dispatch","type","payload","editorState","setEditorState","createEmpty","onEditorStateChange","onChange","draftContent","state","isDirty","init","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA;AACA,SAAuBC,WAAvB,EAAoCC,YAApC,QAAwD,UAAxD;AACA,SAASC,MAAT,QAA6C,qBAA7C;AACA,OAAO,kDAAP;AAEA,OAAO,yBAAP;AACA,OAAO,sBAAP;AAEA,SAA8BC,SAA9B,QAA+C,cAA/C;AACA,OAAOC,OAAP,MAAoD,yBAApD;;AAWA,MAAMC,kBAAiD,GAAIC,KAAD,IAAW;AAAA;;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM,CAACE,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,EAA9B;AACA,QAAMW,EAAE,GAAGP,SAAS,GAAkCO,EAAtD;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEI,eAAZ,CAA4BC,QAAQ,CAACF,EAAD,CAApC,EAA0CG,IAA1C,CAAgDC,KAAD,IAAW;AAAA;;AACxD;AACAL,MAAAA,MAAM,CAACK,KAAK,CAACC,IAAP,CAAN;AACA,UAAIC,mBAAmB,GAAGf,YAAY,CAACgB,cAAb,kBACxBT,GADwB,aACxBA,GADwB,uBACxBA,GAAG,CAAEU,QADmB,yDACP,EADO,CAA1B;AAGA,UAAIC,kBAAkB,GAAGnB,WAAW,CAACoB,iBAAZ,CACvBJ,mBADuB,CAAzB;AAGA,eATwD,CAUxD;;AACAK,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAEJ;AAAtC,OAAD,CAAR;AACD,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT,CALmE,CAqBnE;AACA;;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgC7B,KAAK,CAACG,QAAN,CACpCC,WAAW,CAAC0B,WAAZ,EADoC,CAAtC,CAxBmE,CA4BnE;;AACA,QAAMC,mBAAmB,GAAIH,WAAD,IAA8B;AACxD;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GAHD;;AAIA,QAAMI,QAAQ,GAAIC,YAAD,IAAwC;AACvD;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEM;AAArC,KAAD,CAAR;AACD,GAHD;;AAKA,QAAM,CAACC,KAAD,EAAQT,QAAR,IAAoBvB,UAAU,CAACM,OAAD,EAAU;AAC5CI,IAAAA,GAAG,EAAEA,GADuC;AAE5CgB,IAAAA,WAAW,EAAEA,WAF+B;AAG5CO,IAAAA,OAAO,EAAE;AAHmC,GAAV,CAApC,CAtCmE,CA4CnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,QAAMC,IAAI,GAAG/B,YAAY,CAACgB,cAAb,CAA4B,YAA5B,CAAb;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAK,gBAAeT,GAAf,aAAeA,GAAf,uBAAeA,GAAG,CAAEyB,IAApB;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD,CACE;AADF;AAEE,MAAA,WAAW,EAAEH,KAAK,CAACN,WAFrB;AAGE,MAAA,mBAAmB,EAAEG,mBAHvB;AAIE,MAAA,UAAU,EAAE,IAJd;AAKE,MAAA,gBAAgB,EAAC,cALnB;AAME,MAAA,eAAe,EAAC,aANlB;AAOE,MAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzED;;GAAMvB,kB;UAGOF,S;;;KAHPE,kB;AA2EN,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { ApiApi, Job } from \"../../../util/gen/api/dist\";\n// import { Editor, EditorState } from \"draft-js\";\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\nimport { Editor, RawDraftContentState } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport JobCell from \"../../common/JobCell/JobCell\";\nimport { RouteComponentProps, useParams } from \"react-router\";\nimport reducer, { OutReachEditorReducerState } from \"./OutReachEditorReducer\";\n\ntype OutReachEditorProps = {\n  setQueryInfo?: Function;\n  apiService?: ApiApi;\n};\n\ninterface IUserPublicProfileRouteParams {\n  id: string;\n}\n\nconst OutReachEditorPage: React.FC<OutReachEditorProps> = (props) => {\n  const { apiService } = props;\n  const [job, setJob] = useState<Job>();\n  const id = useParams<IUserPublicProfileRouteParams>().id;\n\n  useEffect(() => {\n    apiService?.apiJobsRetrieve(parseInt(id)).then((value) => {\n      debugger;\n      setJob(value.data);\n      var initialContentState = ContentState.createFromText(\n        job?.template ?? \"\"\n      );\n      var initialEditorState = EditorState.createWithContent(\n        initialContentState\n      );\n      debugger;\n      // setEditorState(initialEditorState);\n      dispatch({ type: \"EDITOR_LOADED_200\", payload: initialEditorState });\n    });\n  }, []);\n\n  // const initialContentState = ContentState.createFromText(job?.name ?? \"\");\n  // const initialEditorState = EditorState.createWithContent(initialContentState);\n\n  const [editorState, setEditorState] = React.useState(\n    EditorState.createEmpty()\n  );\n\n  // const temp = new EditorState(\"hello there\");\n  const onEditorStateChange = (editorState: EditorState) => {\n    // setEditorState(editorState);\n    dispatch({ type: \"EDITOR_EDITED_200\", payload: editorState });\n  };\n  const onChange = (draftContent: RawDraftContentState) => {\n    debugger;\n    dispatch({ type: \"EDITOR_ON_CHANGE\", payload: draftContent });\n  };\n\n  const [state, dispatch] = useReducer(reducer, {\n    job: job,\n    editorState: editorState,\n    isDirty: false,\n  } as OutReachEditorReducerState);\n\n  // useEffect(() => {\n  //   apiService?.apiJobsRetrieve(parseInt(id)).then((value) => {\n  //     debugger;\n  //     convertToRaw(editorState.getCurrentContent());\n  //     setJob(value.data);\n  //   });\n  // }, []);\n\n  /* init in useState boo!*/\n\n  const init = ContentState.createFromText(\"plain text\");\n\n  return (\n    <div>\n      <div>\n        <h2>{\"Draft for \" + job?.name}</h2>\n        <button>Save Template</button>\n      </div>\n      <Editor\n        // initialContentState={initialContentState}\n        editorState={state.editorState}\n        onEditorStateChange={onEditorStateChange}\n        spellCheck={true}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default OutReachEditorPage;\n"]},"metadata":{},"sourceType":"module"}