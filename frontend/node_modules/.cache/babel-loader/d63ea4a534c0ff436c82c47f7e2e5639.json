{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\n// import { Editor, EditorState } from \"draft-js\";\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport { useParams } from \"react-router\";\nimport reducer from \"./OutReachEditorReducer\";\nimport { stringToEditorState, getEditorContentAsString } from \"../../../util/HelperFunctions/TextEditorHelpers\";\nimport Modal from \"../Jobs/Modal/Modal\"; // import {getEditorContentAsString} from \"../../../util/HelperFunctions\";\n\nconst OutReachEditorPage = props => {\n  _s();\n\n  var _job$template;\n\n  const {\n    apiService\n  } = props;\n  const [job, setJob] = useState();\n  const id = parseInt(useParams().id);\n  const [state, dispatch] = useReducer(reducer, {\n    job: job,\n    editorState: EditorState.createWithContent(ContentState.createFromText((_job$template = job === null || job === void 0 ? void 0 : job.template) !== null && _job$template !== void 0 ? _job$template : \"job null\")),\n    isDirty: false,\n    isModalOpen: false\n  });\n\n  const modalHandler = loadedContent => {\n    dispatch({\n      type: \"CLOSE_MODAL\",\n      payload: stringToEditorState(loadedContent)\n    });\n  };\n\n  const useDraftHandler = () => {\n    var _job$templateDraft;\n\n    modalHandler((_job$templateDraft = job === null || job === void 0 ? void 0 : job.templateDraft) !== null && _job$templateDraft !== void 0 ? _job$templateDraft : \"\");\n  };\n\n  const useSavedHandler = () => {\n    var _job$template2;\n\n    modalHandler((_job$template2 = job === null || job === void 0 ? void 0 : job.template) !== null && _job$template2 !== void 0 ? _job$template2 : \"\");\n  };\n\n  useEffect(() => {\n    apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsRetrieve(id).then(value => {\n      debugger;\n\n      if (value.data.hasDraft) {\n        setJob(value.data);\n        dispatch({\n          type: \"OPEN_MODAL\"\n        });\n      } else {\n        var _value$data$template;\n\n        // var initialContentState = ContentState.createFromText(\n        //   value.data.template ?? \"\"\n        // );\n        // var initialEditorState = EditorState.createWithContent(\n        //   initialContentState\n        // );\n        var initialEditorState = stringToEditorState((_value$data$template = value.data.template) !== null && _value$data$template !== void 0 ? _value$data$template : \"\");\n        dispatch({\n          type: \"EDITOR_LOADED_200\",\n          payload: initialEditorState\n        });\n      } // setJob(value.data);\n      // var initialContentState = ContentState.createFromText(\n      //   value.data.template ?? \"\"\n      // );\n      // var initialEditorState = EditorState.createWithContent(\n      //   initialContentState\n      // );\n      // dispatch({ type: \"EDITOR_LOADED_200\", payload: initialEditorState });\n\n    });\n  }, []);\n  useEffect(() => {\n    var _state$editorState;\n\n    if (state.isDirty === true && ((_state$editorState = state.editorState) === null || _state$editorState === void 0 ? void 0 : _state$editorState.getCurrentContent()) != undefined) {\n      const value = getEditorContentAsString(state.editorState);\n\n      if ((job === null || job === void 0 ? void 0 : job.template) !== value) {\n        apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsUpdate(id, { ...job,\n          template: value\n        }).then(value => {\n          debugger;\n          setJob(value.data);\n          dispatch({\n            type: \"EDITOR_POSTED\"\n          });\n        });\n      } else {\n        dispatch({\n          type: \"EDITOR_POSTED\"\n        });\n      }\n    }\n  }, [state.isDirty]);\n\n  const saveClickHandler = () => {\n    if (state.editorState != undefined) {\n      const value = getEditorContentAsString(state.editorState);\n      save(value);\n    }\n  };\n\n  const save = value => {\n    apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsUpdate(id, { ...job,\n      template: value\n    }).then(value => {\n      debugger;\n      setJob(value.data);\n      dispatch({\n        type: \"EDITOR_POSTED\"\n      });\n    });\n  };\n\n  const onEditorStateChange = editorState => {\n    dispatch({\n      type: \"EDITOR_EDITED_200\",\n      payload: editorState\n    });\n  };\n\n  const init = ContentState.createFromText(\"plain text\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      clickSavedHandler: useSavedHandler,\n      clickDraftHandler: useDraftHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Draft for \" + (job === null || job === void 0 ? void 0 : job.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveClickHandler,\n        disabled: !state.isDirty,\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      initialContentState: convertToRaw(init),\n      editorState: state.editorState,\n      onEditorStateChange: onEditorStateChange,\n      spellCheck: true,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OutReachEditorPage, \"aEelI292eE29zTFHbRexwM5979M=\", false, function () {\n  return [useParams];\n});\n\n_c = OutReachEditorPage;\nexport default OutReachEditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutReachEditorPage\");","map":{"version":3,"sources":["/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx"],"names":["React","useEffect","useReducer","useState","convertToRaw","EditorState","ContentState","Editor","useParams","reducer","stringToEditorState","getEditorContentAsString","Modal","OutReachEditorPage","props","apiService","job","setJob","id","parseInt","state","dispatch","editorState","createWithContent","createFromText","template","isDirty","isModalOpen","modalHandler","loadedContent","type","payload","useDraftHandler","templateDraft","useSavedHandler","apiJobsRetrieve","then","value","data","hasDraft","initialEditorState","getCurrentContent","undefined","apiJobsUpdate","saveClickHandler","save","onEditorStateChange","init","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { ApiApi, Job } from \"../../../util/gen/api/dist\";\n// import { Editor, EditorState } from \"draft-js\";\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\nimport { Editor, RawDraftContentState } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport JobCell from \"../../common/JobCell/JobCell\";\nimport { RouteComponentProps, useParams } from \"react-router\";\nimport reducer, { OutReachEditorReducerState } from \"./OutReachEditorReducer\";\nimport AllJobsPage from \"../Jobs/allJobs\";\nimport {\n  stringToEditorState,\n  getEditorContentAsString,\n} from \"../../../util/HelperFunctions/TextEditorHelpers\";\nimport Modal from \"../Jobs/Modal/Modal\";\n// import {getEditorContentAsString} from \"../../../util/HelperFunctions\";\n\ntype OutReachEditorProps = {\n  setQueryInfo?: Function;\n  apiService?: ApiApi;\n};\n\ninterface IUserPublicProfileRouteParams {\n  id: string;\n}\n\nconst OutReachEditorPage: React.FC<OutReachEditorProps> = (props) => {\n  const { apiService } = props;\n  const [job, setJob] = useState<Job>();\n  const id = parseInt(useParams<IUserPublicProfileRouteParams>().id);\n\n  const [state, dispatch] = useReducer(reducer, {\n    job: job,\n    editorState: EditorState.createWithContent(\n      ContentState.createFromText(job?.template ?? \"job null\")\n    ),\n    isDirty: false,\n    isModalOpen: false,\n  } as OutReachEditorReducerState);\n\n  const modalHandler = (loadedContent: string) => {\n    dispatch({\n      type: \"CLOSE_MODAL\",\n      payload: stringToEditorState(loadedContent),\n    });\n  };\n\n  const useDraftHandler = () => {\n    modalHandler(job?.templateDraft ?? \"\");\n  };\n\n  const useSavedHandler = () => {\n    modalHandler(job?.template ?? \"\");\n  };\n\n  useEffect(() => {\n    apiService?.apiJobsRetrieve(id).then((value) => {\n      debugger;\n      if (value.data.hasDraft) {\n        setJob(value.data);\n        dispatch({ type: \"OPEN_MODAL\" });\n      } else {\n        // var initialContentState = ContentState.createFromText(\n        //   value.data.template ?? \"\"\n        // );\n        // var initialEditorState = EditorState.createWithContent(\n        //   initialContentState\n        // );\n        var initialEditorState = stringToEditorState(value.data.template ?? \"\");\n        dispatch({ type: \"EDITOR_LOADED_200\", payload: initialEditorState });\n      }\n      // setJob(value.data);\n      // var initialContentState = ContentState.createFromText(\n      //   value.data.template ?? \"\"\n      // );\n      // var initialEditorState = EditorState.createWithContent(\n      //   initialContentState\n      // );\n      // dispatch({ type: \"EDITOR_LOADED_200\", payload: initialEditorState });\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      state.isDirty === true &&\n      state.editorState?.getCurrentContent() != undefined\n    ) {\n      const value = getEditorContentAsString(state.editorState);\n      if (job?.template !== value) {\n        apiService\n          ?.apiJobsUpdate(id, {\n            ...job,\n            template: value,\n          } as Job)\n          .then((value) => {\n            debugger;\n            setJob(value.data);\n            dispatch({ type: \"EDITOR_POSTED\" });\n          });\n      } else {\n        dispatch({ type: \"EDITOR_POSTED\" });\n      }\n    }\n  }, [state.isDirty]);\n\n  const saveClickHandler = () => {\n    if (state.editorState != undefined) {\n      const value = getEditorContentAsString(state.editorState);\n      save(value);\n    }\n  };\n  const save = (value: string) => {\n    apiService\n      ?.apiJobsUpdate(id, {\n        ...job,\n        template: value,\n      } as Job)\n      .then((value) => {\n        debugger;\n        setJob(value.data);\n        dispatch({ type: \"EDITOR_POSTED\" });\n      });\n  };\n\n  const onEditorStateChange = (editorState: EditorState) => {\n    dispatch({ type: \"EDITOR_EDITED_200\", payload: editorState });\n  };\n\n  const init = ContentState.createFromText(\"plain text\");\n\n  return (\n    <div>\n      <Modal\n        clickSavedHandler={useSavedHandler}\n        clickDraftHandler={useDraftHandler}\n      />\n      <div>\n        <h2>{\"Draft for \" + job?.name}</h2>\n        <button onClick={saveClickHandler} disabled={!state.isDirty}>\n          Save Template\n        </button>\n      </div>\n      <Editor\n        initialContentState={convertToRaw(init)}\n        editorState={state.editorState}\n        onEditorStateChange={onEditorStateChange}\n        spellCheck={true}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n      />\n    </div>\n  );\n};\n\nexport default OutReachEditorPage;\n"]},"metadata":{},"sourceType":"module"}