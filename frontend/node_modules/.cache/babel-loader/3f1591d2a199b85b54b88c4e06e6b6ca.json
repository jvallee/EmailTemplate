{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport { useParams } from \"react-router\";\nimport reducer from \"./OutReachEditorReducer\";\nimport { stringToEditorState, getEditorContentAsString } from \"../../../util/HelperFunctions/TextEditorHelpers\";\nimport Modal from \"./Modal/Modal\";\n\nconst OutReachEditorPage = props => {\n  _s();\n\n  var _state$job4;\n\n  const {\n    apiService\n  } = props;\n  const id = parseInt(useParams().id);\n  const [state, dispatch] = useReducer(reducer, {\n    job: undefined,\n    editorState: EditorState.createWithContent(ContentState.createFromText(\"placeholder\")),\n    isDirty: false,\n    isModalOpen: false\n  });\n\n  const modalClickHelper = loadedContent => {\n    debugger;\n    dispatch({\n      type: \"CLOSE_MODAL\",\n      payload: stringToEditorState(loadedContent)\n    });\n  };\n\n  const useDraftHandler = () => {\n    var _state$job$templateDr, _state$job;\n\n    debugger;\n    modalClickHelper((_state$job$templateDr = (_state$job = state.job) === null || _state$job === void 0 ? void 0 : _state$job.templateDraft) !== null && _state$job$templateDr !== void 0 ? _state$job$templateDr : \"\");\n  };\n\n  const useSavedHandler = () => {\n    var _state$job$template, _state$job2;\n\n    debugger;\n    modalClickHelper((_state$job$template = (_state$job2 = state.job) === null || _state$job2 === void 0 ? void 0 : _state$job2.template) !== null && _state$job$template !== void 0 ? _state$job$template : \"\");\n  };\n\n  useEffect(() => {\n    var _state$editorState;\n\n    debugger;\n\n    if (state.job == undefined) {\n      loadDataIn(id, state, dispatch, apiService);\n    } else if (state.isDirty === true && ((_state$editorState = state.editorState) === null || _state$editorState === void 0 ? void 0 : _state$editorState.getCurrentContent()) != undefined) {\n      var _state$job3;\n\n      const value = getEditorContentAsString(state.editorState);\n\n      if (((_state$job3 = state.job) === null || _state$job3 === void 0 ? void 0 : _state$job3.template) !== value) {\n        apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsUpdate(id, { ...state.job,\n          templateDraft: value,\n          hasDraft: true\n        }).then(value => {\n          debugger; // setJob(value.data);\n\n          dispatch({\n            type: \"EDITOR_POSTED\"\n          });\n        });\n      } else {\n        dispatch({\n          type: \"STYLES_CHANGE\"\n        });\n      }\n    }\n  }, [state.isDirty]);\n\n  const saveClickHandler = () => {\n    if (state.editorState != undefined) {\n      const value = getEditorContentAsString(state.editorState);\n      save(value);\n    }\n  };\n\n  const save = value => {\n    apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsUpdate(id, { ...state.job,\n      template: value\n    }).then(value => {\n      debugger; // setJob(value.data);\n\n      dispatch({\n        type: \"EDITOR_POSTED\"\n      });\n    });\n  };\n\n  const onEditorStateChange = editorState => {\n    debugger;\n    dispatch({\n      type: \"EDITOR_EDITED_200\",\n      payload: editorState\n    });\n  };\n\n  const init = ContentState.createFromText(\"plain text\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      clickSavedHandler: useSavedHandler,\n      clickDraftHandler: useDraftHandler,\n      isOpen: state.isModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Draft for \" + ((_state$job4 = state.job) === null || _state$job4 === void 0 ? void 0 : _state$job4.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveClickHandler,\n        disabled: !state.isDirty,\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      initialContentState: convertToRaw(init),\n      editorState: state.editorState,\n      onEditorStateChange: onEditorStateChange,\n      spellCheck: true,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OutReachEditorPage, \"TXk/DeukRquNpap78Ott3hgBUXQ=\", false, function () {\n  return [useParams];\n});\n\n_c = OutReachEditorPage;\n\nconst loadDataIn = (id, dispatch, apiService) => {\n  apiService === null || apiService === void 0 ? void 0 : apiService.apiJobsRetrieve(id).then(value => {\n    debugger;\n    dispatch({\n      type: \"EDITOR_LOAD_JOB\",\n      payload: value.data\n    });\n\n    if (value.data.hasDraft) {\n      dispatch({\n        type: \"OPEN_MODAL\"\n      });\n    } else {\n      var _value$data$template;\n\n      var initialEditorState = stringToEditorState((_value$data$template = value.data.template) !== null && _value$data$template !== void 0 ? _value$data$template : \"\");\n      dispatch({\n        type: \"EDITOR_LOADED_200\",\n        payload: initialEditorState\n      });\n    }\n  });\n};\n\nexport default OutReachEditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutReachEditorPage\");","map":{"version":3,"sources":["/Users/jasonmichaelvallee/PycharmProjects/todo-react-django/frontend/src/components/pages/OutReachEditor/OutReachEditor.tsx"],"names":["React","useEffect","useReducer","convertToRaw","EditorState","ContentState","Editor","useParams","reducer","stringToEditorState","getEditorContentAsString","Modal","OutReachEditorPage","props","apiService","id","parseInt","state","dispatch","job","undefined","editorState","createWithContent","createFromText","isDirty","isModalOpen","modalClickHelper","loadedContent","type","payload","useDraftHandler","templateDraft","useSavedHandler","template","loadDataIn","getCurrentContent","value","apiJobsUpdate","hasDraft","then","saveClickHandler","save","onEditorStateChange","init","name","apiJobsRetrieve","data","initialEditorState"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { ApiApi, Job } from \"../../../util/gen/api/dist\";\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\nimport { Editor, RawDraftContentState } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./OutReachEditor.css\";\nimport { useParams } from \"react-router\";\nimport reducer, {\n  OutReachEditorActions,\n  OutReachEditorReducerState,\n} from \"./OutReachEditorReducer\";\nimport {\n  stringToEditorState,\n  getEditorContentAsString,\n} from \"../../../util/HelperFunctions/TextEditorHelpers\";\nimport Modal from \"./Modal/Modal\";\n\ntype OutReachEditorProps = {\n  setQueryInfo?: Function;\n  apiService?: ApiApi;\n};\n\ninterface IUserPublicProfileRouteParams {\n  id: string;\n}\n\nconst OutReachEditorPage: React.FC<OutReachEditorProps> = (props) => {\n  const { apiService } = props;\n  const id = parseInt(useParams<IUserPublicProfileRouteParams>().id);\n\n  const [state, dispatch] = useReducer(reducer, {\n    job: undefined,\n    editorState: EditorState.createWithContent(\n      ContentState.createFromText(\"placeholder\")\n    ),\n    isDirty: false,\n    isModalOpen: false,\n  } as OutReachEditorReducerState);\n\n  const modalClickHelper = (loadedContent: string) => {\n    debugger;\n    dispatch({\n      type: \"CLOSE_MODAL\",\n      payload: stringToEditorState(loadedContent),\n    });\n  };\n\n  const useDraftHandler = () => {\n    debugger;\n    modalClickHelper(state.job?.templateDraft ?? \"\");\n  };\n\n  const useSavedHandler = () => {\n    debugger;\n    modalClickHelper(state.job?.template ?? \"\");\n  };\n\n  useEffect(() => {\n    debugger;\n    if (state.job == undefined) {\n      loadDataIn(id, state, dispatch, apiService);\n    } else if (\n      state.isDirty === true &&\n      state.editorState?.getCurrentContent() != undefined\n    ) {\n      const value = getEditorContentAsString(state.editorState);\n      if (state.job?.template !== value) {\n        apiService\n          ?.apiJobsUpdate(id, {\n            ...state.job,\n            templateDraft: value,\n            hasDraft: true,\n          } as Job)\n          .then((value) => {\n            debugger;\n            // setJob(value.data);\n            dispatch({ type: \"EDITOR_POSTED\" });\n          });\n      } else {\n        dispatch({ type: \"STYLES_CHANGE\" });\n      }\n    }\n  }, [state.isDirty]);\n\n  const saveClickHandler = () => {\n    if (state.editorState != undefined) {\n      const value = getEditorContentAsString(state.editorState);\n      save(value);\n    }\n  };\n\n  const save = (value: string) => {\n    apiService\n      ?.apiJobsUpdate(id, {\n        ...state.job,\n        template: value,\n      } as Job)\n      .then((value) => {\n        debugger;\n        // setJob(value.data);\n        dispatch({ type: \"EDITOR_POSTED\" });\n      });\n  };\n\n  const onEditorStateChange = (editorState: EditorState) => {\n    debugger;\n    dispatch({ type: \"EDITOR_EDITED_200\", payload: editorState });\n  };\n\n  const init = ContentState.createFromText(\"plain text\");\n\n  return (\n    <div>\n      <Modal\n        clickSavedHandler={useSavedHandler}\n        clickDraftHandler={useDraftHandler}\n        isOpen={state.isModalOpen}\n      />\n      <div>\n        <h2>{\"Draft for \" + state.job?.name}</h2>\n        <button onClick={saveClickHandler} disabled={!state.isDirty}>\n          Save Template\n        </button>\n      </div>\n      <Editor\n        initialContentState={convertToRaw(init)}\n        editorState={state.editorState}\n        onEditorStateChange={onEditorStateChange}\n        spellCheck={true}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n      />\n    </div>\n  );\n};\n\nconst loadDataIn = (\n  id: number,\n  dispatch: (value: OutReachEditorActions) => void,\n  apiService?: ApiApi\n) => {\n  apiService?.apiJobsRetrieve(id).then((value) => {\n    debugger;\n    dispatch({ type: \"EDITOR_LOAD_JOB\", payload: value.data });\n    if (value.data.hasDraft) {\n      dispatch({ type: \"OPEN_MODAL\" });\n    } else {\n      var initialEditorState = stringToEditorState(value.data.template ?? \"\");\n      dispatch({ type: \"EDITOR_LOADED_200\", payload: initialEditorState });\n    }\n  });\n};\n\nexport default OutReachEditorPage;\n"]},"metadata":{},"sourceType":"module"}