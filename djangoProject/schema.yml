openapi: 3.0.3
info:
  title: Test Backend
  version: 0.0.0
paths:
  /api/candidates/:
    get:
      operationId: candidatesList
      description: ''
      tags:
      - candidates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
          description: ''
    post:
      operationId: candidatesCreate
      description: ''
      tags:
      - candidates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Candidate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Candidate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
          description: ''
  /api/candidates/{id}/:
    get:
      operationId: candidatesRetrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this candidate.
        required: true
      tags:
      - candidates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
          description: ''
    put:
      operationId: candidatesUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this candidate.
        required: true
      tags:
      - candidates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Candidate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Candidate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
          description: ''
    patch:
      operationId: candidatesPartialUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this candidate.
        required: true
      tags:
      - candidates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCandidate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCandidate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCandidate'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
          description: ''
    delete:
      operationId: candidatesDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this candidate.
        required: true
      tags:
      - candidates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/clients/:
    get:
      operationId: listClient
      description: list client
      tags:
      - ValleeBackend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
    post:
      operationId: createClient
      description: create client
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/clients/{id}/:
    get:
      operationId: getClient
      description: retrieve client
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - ValleeBackend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: updateClient
      description: update client
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: partialUpdateClient
      description: partial update client
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: clientsDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this client.
        required: true
      tags:
      - clients
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/jobs/:
    get:
      operationId: listJob
      description: list job
      tags:
      - ValleeBackend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
    post:
      operationId: createJob
      description: create job
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{id}/:
    get:
      operationId: getJob
      description: retrieve job
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - ValleeBackend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: updateJob
      description: update job
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: partialUpdateJob
      description: partial update job
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobsDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this job.
        required: true
      tags:
      - jobs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/outreaches/:
    get:
      operationId: listOutreach
      description: list outreach
      tags:
      - ValleeBackend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Outreach'
          description: ''
    post:
      operationId: createOutreach
      description: create outreach
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outreach'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Outreach'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Outreach'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outreach'
          description: ''
  /api/outreaches/{id}/:
    get:
      operationId: getOutreach
      description: retrieve outreach
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this outreach.
        required: true
      tags:
      - ValleeBackend
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outreach'
          description: ''
    put:
      operationId: updateOutreach
      description: update outreach
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this outreach.
        required: true
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outreach'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Outreach'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Outreach'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outreach'
          description: ''
    patch:
      operationId: partialUpdateOutreach
      description: partial update outreach
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this outreach.
        required: true
      tags:
      - ValleeBackend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOutreach'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOutreach'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOutreach'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outreach'
          description: ''
    delete:
      operationId: outreachesDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this outreach.
        required: true
      tags:
      - outreaches
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schemaRetrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/todos/:
    get:
      operationId: todosList
      description: ''
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
          description: ''
    post:
      operationId: todosCreate
      description: ''
      tags:
      - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Todo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
  /api/todos/{id}/:
    get:
      operationId: todosRetrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    put:
      operationId: todosUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Todo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    patch:
      operationId: todosPartialUpdate
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTodo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: ''
    delete:
      operationId: todosDestroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this todo.
        required: true
      tags:
      - todos
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Candidate:
      type: object
      properties:
        name:
          type: string
        years_experience:
          type: string
          format: decimal
          maximum: 1000
          minimum: -1000
        custom:
          type: string
      required:
      - custom
      - name
      - years_experience
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 120
      required:
      - id
      - jobs
      - name
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        outreaches:
          type: array
          items:
            $ref: '#/components/schemas/Outreach'
          readOnly: true
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 240
        template:
          type: string
        hasDraft:
          type: boolean
        templateDraft:
          type: string
        subject:
          type: string
          maxLength: 140
        poster:
          type: integer
      required:
      - created
      - id
      - modified
      - name
      - outreaches
      - poster
      - template
    Outreach:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        editor_state:
          type: object
          additionalProperties: {}
          nullable: true
        job:
          type: integer
      required:
      - created
      - id
      - job
      - modified
    PatchedCandidate:
      type: object
      properties:
        name:
          type: string
        years_experience:
          type: string
          format: decimal
          maximum: 1000
          minimum: -1000
        custom:
          type: string
    PatchedClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 120
    PatchedJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        outreaches:
          type: array
          items:
            $ref: '#/components/schemas/Outreach'
          readOnly: true
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 240
        template:
          type: string
        hasDraft:
          type: boolean
        templateDraft:
          type: string
        subject:
          type: string
          maxLength: 140
        poster:
          type: integer
    PatchedOutreach:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        editor_state:
          type: object
          additionalProperties: {}
          nullable: true
        job:
          type: integer
    PatchedTodo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 120
        description:
          type: string
        completed:
          type: boolean
    StateEnum:
      enum:
      - DRAFT
      - FINALIZED
      type: string
    Todo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 120
        description:
          type: string
        completed:
          type: boolean
      required:
      - description
      - id
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
